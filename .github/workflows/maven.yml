# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven and docker

on:
  push:
    branches: [ main ]

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          cache: maven
      - name: Test with Maven
        run: mvn test

  build_and_docker_push:

    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v2

      - name: Find and Replace DB Host
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: "${DB_HOST}"
          replace: "${{secrets.DB_HOST}}"
          include: "src/main/resources/application.properties"

      - name: Find and Replace DB Name
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: "${DB_NAME}"
          replace: "${{secrets.DB_NAME}}"
          include: "src/main/resources/application.properties"

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          cache: maven

      - name: Build with Maven
        run: mvn -B install -DskipTests --file pom.xml

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/sb-mensajeria-docker:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}